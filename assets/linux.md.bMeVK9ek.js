import{_ as s,c as a,o as i,a2 as n}from"./chunks/framework.CSGcjqEA.js";const C=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"linux.md","filePath":"linux.md"}'),p={name:"linux.md"},l=n(`<p>Linux基础</p><blockquote><h2 id="什么是linux" tabindex="-1">什么是Linux <a class="header-anchor" href="#什么是linux" aria-label="Permalink to &quot;什么是Linux&quot;">​</a></h2></blockquote><p>Linux是类Unix计算机操作系统的统称。Linux操作系统的内核名字也是“Linux”。Linux操作系统也是自由软件和开发源代码发展中最著名的例子。严格来说，Linux这个词只表示Linux内核，但是在实际上人们已经习惯了用Linux来形容整个基于Linux内核，并且使用GNU工程各种工具和数据库的操作系统。Linux得名于计算机业余爱好者Linus Torvalds。</p><p>Linux是一套免费使用和自由传播的类Unix操作系统，它主要用于基于Intel x86系列CPU的计算机上。这个系统是由世界各地的成千上万的程序员设计和实现的。其目的是建立不受任何商品化软件的版权制约的、全世界都能自由使用的Unix兼容产品。</p><blockquote><h4 id="linux-历史篇" tabindex="-1">Linux 历史篇 <a class="header-anchor" href="#linux-历史篇" aria-label="Permalink to &quot;Linux 历史篇&quot;">​</a></h4></blockquote><h5 id="multics-的计划" tabindex="-1">Multics 的计划 <a class="header-anchor" href="#multics-的计划" aria-label="Permalink to &quot;Multics 的计划&quot;">​</a></h5><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1965年前后</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">由贝尔实验室</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bell</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">、麻省理工学院</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MIT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">及美国通用电气公司</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">共同发起</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Multics其目的是想要让大型主机可以达成提供</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 300</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 个以上的终端机连线使用的目标</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">后来因计画进度落后，资金短缺，宣告失败。</span></span></code></pre></div><h5 id="unics" tabindex="-1">Unics <a class="header-anchor" href="#unics" aria-label="Permalink to &quot;Unics&quot;">​</a></h5><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1969</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 年Multics</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 的计划的成员贝尔实验室的肯·汤普逊</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Ken</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Thompson</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">利用一部</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> dec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">digital</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> equipment</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> corporation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">的</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> pdp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ，以汇编语言</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Assembler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">写出了一个核心程式</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">同时包括一些核心工具程式</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">以及一个档案系统，这个系统就是</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> unix</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 的原型，称为Unics</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 。</span></span></code></pre></div><h4 id="unix" tabindex="-1">Unix <a class="header-anchor" href="#unix" aria-label="Permalink to &quot;Unix&quot;">​</a></h4><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1973</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 年。贝尔实验室的肯·汤普逊</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Ken</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Thompson</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">跟丹尼斯·里奇</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Dennis</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Ritchie</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">C语言之父</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">重新以</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> c</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 语言改写</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">最后发行成</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Unix</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 。</span></span></code></pre></div><h4 id="bsd" tabindex="-1">BSD <a class="header-anchor" href="#bsd" aria-label="Permalink to &quot;BSD&quot;">​</a></h4><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Unix</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 后来与加州柏克莱</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Berkeley</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">大学合作</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1977年柏克莱大学的</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bill</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Joy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 著手修改成适合自己机器的版本</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">并且同时增加了很多工具软体与编译程式，命名為</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Berkeley</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Software</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Distribution</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BSD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">这个</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> BSD</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 是</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> unix</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 很重要的一个分支（Bill</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Joy也是著名业者</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SUN这家公司的创办者）</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span></span></code></pre></div><h4 id="minix" tabindex="-1">Minix <a class="header-anchor" href="#minix" aria-label="Permalink to &quot;Minix&quot;">​</a></h4><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1986年荷兰阿姆斯特丹自由大学谭邦宁教授</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Andrew</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> S</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Tanenbaum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">完成</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> minix</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 这个</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> unix</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> like</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 的核心程式，将</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> unix</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 改写并移植到</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> x86</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 结构上面</span></span></code></pre></div><h4 id="gnu计划" tabindex="-1">GNU计划 <a class="header-anchor" href="#gnu计划" aria-label="Permalink to &quot;GNU计划&quot;">​</a></h4><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1984</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 年理查德·马修·斯托曼</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Richard</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Stallman</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">发起GNU计划</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GNU</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 是</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GNU</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;s Not Unix 的缩写)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">并且成立自由软件基金会对於现今的自由软件风潮，有著不可磨灭的功劳.</span></span></code></pre></div><h4 id="gpl" tabindex="-1">GPL <a class="header-anchor" href="#gpl" aria-label="Permalink to &quot;GPL&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>1985年，為了避免GNU所开发的自由软件被其他人所利用而成為专利软件.</span></span>
<span class="line"><span>Stallman与律师草拟了有名的通用公共许可证GPL(General Public License) .其特点為：</span></span>
<span class="line"><span></span></span>
<span class="line"><span>1.可以根据自己的需求來执行這個自由软件</span></span>
<span class="line"><span>2.可以自由的复制该软件</span></span>
<span class="line"><span>3.可以將取得的原始码進行程式修改工作</span></span>
<span class="line"><span>4.可以將您修改過的程式，再度的自由發行</span></span>
<span class="line"><span>5.应该將您修改過的程式码回馈于社会</span></span>
<span class="line"><span>6.不能將一個 GPL 授权 的自由软件，在修改後取消 GPL 授权</span></span>
<span class="line"><span>7.不能单纯的贩卖自由软件（需提供售后服务与相关手册等）</span></span></code></pre></div><h4 id="linux" tabindex="-1">Linux <a class="header-anchor" href="#linux" aria-label="Permalink to &quot;Linux&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>1991年10月5日，芬兰赫尔辛基的大學生Linus Torvalds(林纳斯·托瓦兹) </span></span>
<span class="line"><span>在comp.os.minix 這個新闻群组上发布了 0.02版Linux。</span></span>
<span class="line"><span>“有些人生来就具有统率百万人的领袖风范；另一些人则是为写出颠覆世界的软件而生。</span></span>
<span class="line"><span>唯一一个能同时做到这两者的人</span></span>
<span class="line"><span>就是托瓦兹.” 美国《时代》周刊对“Linux之父”林纳斯·托瓦兹（Linus Torvalds）给出了极高的评价。</span></span></code></pre></div><h4 id="发行版" tabindex="-1">发行版 <a class="header-anchor" href="#发行版" aria-label="Permalink to &quot;发行版&quot;">​</a></h4><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">那么，什么是发行版呢？因为Linux是开源项目，它的源代码是放到网络上</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">让世界各地的人们去下载，那么有些人在拿到Linux之后就会修改成自己喜欢的</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Linux版本，</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">而当他公布了自己修改完的版本到网络上面，那么就是所谓的发行版了。</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">时至今日，Linux已经出现了很多很多的好用版本，如果你不知道使用那些版本的话</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">你可以使用一些比较出名的Linux发行版</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">例如：Centos、Ubuntu、openSUSE、Fedora、SElinux</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">其中CentOS是在服务器端是出了名的稳定的，还有Ubuntu重点是放在个人桌面系统领域。</span></span></code></pre></div><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/linux.png" alt="img"></p><h2 id="vmware虚拟机安装" tabindex="-1">VMware虚拟机安装 <a class="header-anchor" href="#vmware虚拟机安装" aria-label="Permalink to &quot;VMware虚拟机安装&quot;">​</a></h2><blockquote><h4 id="安装前述" tabindex="-1">安装前述 <a class="header-anchor" href="#安装前述" aria-label="Permalink to &quot;安装前述&quot;">​</a></h4></blockquote><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">如果你想玩下Linux系统，那么你有两种选择</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">第一种选择就是直接在你自己的电脑上安装，我们通常会把这种叫真实电脑安装，为什么呢？</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">因为第二种选择是在虚拟机上安装Linux，我们会把这种叫做虚拟机安装。</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">那么，什么是虚拟机？其实虚拟机只是一款软件，而这款软件的功能是模拟真实电脑</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">虚拟一台假电脑提供给使用者安装系统之用</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">这样做的好处就是我们完全可以不用先删除自己现有的系统，就可以玩上Linux</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">当然也是可以玩其他系统的。</span></span></code></pre></div><blockquote><h4 id="安装准备" tabindex="-1">安装准备 <a class="header-anchor" href="#安装准备" aria-label="Permalink to &quot;安装准备&quot;">​</a></h4></blockquote><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.VMware</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> （推荐使用的一款虚拟机软件）</span></span></code></pre></div><p>1、双击VMware安装程序后会弹出一个安装向导的窗口，然后我们点击下一步</p><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/linux/VMware_1.png" alt="img"></p><p>2、这是VMware的许可协议，按图操作即可</p><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/linux/VMware_2.png" alt="img"></p><p>3、VMware的安装路径默认安装在C盘，我们改成任意个盘，例如D盘。然后下一步</p><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/linux/VMware_3.png" alt="img"></p><p>4、体验设置，一般默认即可，然后我们下一步</p><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/linux/VMware_4.png" alt="img"></p><p>5、选择是否在桌面创建快捷方式和开始菜单创建文件夹与快捷方式</p><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/linux/VMware_5.png" alt="img"></p><p>6、因为图中的是已经安装过VMware了，所以点击中间的升级那个按钮</p><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/linux/VMware_6.png" alt="img"></p><p>7、如果你有VMware许可证，可以点许可证。没有就点完成即可</p><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/linux/VMware_7.png" alt="img"></p><p>8、准备好系统镜像，下面我们会到用ubuntu系统镜像</p><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/linux/ubuntu_1.png" alt="img"></p><p>9、打开VMware，如图操作 <img src="http://web.wdwangke.com/mdphoto/backend/backend/linux/ubuntu_2.png" alt="img"></p><p>10、选择安装方法，一般经典即可，再下一步</p><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/linux/ubuntu_3.png" alt="img"></p><p>11、这里选择镜像，然后下一步</p><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/linux/ubuntu_4.png" alt="img"></p><p>12、这步就根据自己的需求去设置图下的选项</p><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/linux/ubuntu_5.png" alt="img"></p><p>13、虚拟机名称和该虚拟机的位置，有需要就改，没有就默认</p><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/linux/ubuntu_6.png" alt="img"></p><p>14、这里给虚拟机配置磁盘大小，默认的是20g</p><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/linux/ubuntu_7.png" alt="img"></p><p>15、给虚拟机配置硬件，例如CPU的核数和运行内存等等，然后点击完成，等待开机</p><h2 id="centos系统安装" tabindex="-1">Centos系统安装 <a class="header-anchor" href="#centos系统安装" aria-label="Permalink to &quot;Centos系统安装&quot;">​</a></h2><h4 id="什么是centos" tabindex="-1">什么是Centos <a class="header-anchor" href="#什么是centos" aria-label="Permalink to &quot;什么是Centos&quot;">​</a></h4><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CentOS是Community</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Enterprise</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Operating</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> System的缩写，也叫做社区企业操作系统。</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">是企业Linux发行版领头羊Red</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Hat</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Enterprise</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Linux（以下称之为RHEL）的再编译版本（是一个再发行版本），</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">而且在RHEL的基础上修正了不少已知的</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bug</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ，相对于其他</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Linux</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 发行版，其稳定性值得信赖。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">下面会讲解如何安装CenteOS</span></span></code></pre></div><h4 id="安装前准备" tabindex="-1">安装前准备 <a class="header-anchor" href="#安装前准备" aria-label="Permalink to &quot;安装前准备&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>1.VMware （推荐使用的一款虚拟机软件）</span></span>
<span class="line"><span>2.CentOS系统镜像</span></span></code></pre></div><h4 id="文件下载" tabindex="-1">文件下载 <a class="header-anchor" href="#文件下载" aria-label="Permalink to &quot;文件下载&quot;">​</a></h4><p><a href="https://www.aliyundrive.com/s/GDps6jKYNwM" target="_blank" rel="noreferrer"><strong>系统镜像与VMware软件</strong></a></p><p><strong>密码：g9e7</strong></p><h4 id="安装步骤" tabindex="-1">安装步骤 <a class="header-anchor" href="#安装步骤" aria-label="Permalink to &quot;安装步骤&quot;">​</a></h4><ol><li><p>VMware软件与系统镜像安装可以参考VMware虚拟机安装这章节</p></li><li><p>安装完开启centos系统会出现一个界面，如下</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">参数说明</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> CentOS</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 7</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 安装CentOS</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">选择该项</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Test</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> media</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> CentOS</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 7</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 测试安装文件并安装CentOS</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 7</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Troubleshooting</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 修复故障</span></span></code></pre></div><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/linux/centos_1.png" alt="img"></p></li><li><p>这里选择第一项，安装CentOS 7，回车，进入下面的界面。选择语言：中文-简体中文（中国）(这是安装时的语言)</p><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/linux/centos_3.png" alt="img"></p></li><li><p>点击继续，会有一个界面，然后选择网络和主机名</p><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/linux/centos_4.png" alt="img"></p></li><li><p>选择后会出现如下界面，把以太网打开然后完成</p><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/linux/centos_5.png" alt="img"></p></li><li><p>点击开始安装，会出现如下界面，注意在这步必须要设置root密码，图里显示已经设置了。可以创建新的用户也不用创建，但是建议创建一个新的用户</p><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/linux/centos_6.png" alt="img"></p></li><li><p>设置root密码，由于密码太简单了，需要点击两次完成</p><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/linux/centos_7.png" alt="img"></p></li><li><p>创建用户，由于密码太简单了，需要点击两次完成</p><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/linux/centos_8.png" alt="img"></p></li><li><p>已经设置root密码以及创建好用户，最后一步点击重启</p><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/linux/centos_9.png" alt="img"></p></li><li><p>选择重启后开机会出现一个界面，选择第一项</p><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/linux/centos_10.png" alt="img"></p></li><li><p>选择用哪个用户开机，这里选的是root超级管理员，注意这里输入密码是不显示出来</p><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/linux/centos_11.png" alt="img"></p></li><li><p>配置网卡，因为centOS7开机不会自动开启网卡，所以需要去修改一下配置文件</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 一、查看ip以及网卡，由于centos没有安装net-tools，所以ifconfig使用不了</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ip</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> addr</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 二、执行ip addr指令后会会返回以下信息，如果ens33没有inet 192.168.6.12类似信息，说明网卡没有正常运行(下面信息里的ens33是正常使用的)   </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">lo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LOOPBACK</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LOWER_UP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mtu</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 65536</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> qdisc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> noqueue</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> state</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UNKNOWN</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> group</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> qlen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1000</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    link</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">loopback</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">00</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> brd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">00</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    inet</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 127.0.0.1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> scope</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> host</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> lo</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       valid_lft</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> forever</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> preferred_lft</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> forever</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    inet6</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">128</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> scope</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> host</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       valid_lft</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> forever</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> preferred_lft</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> forever</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ens33</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BROADCAST</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MULTICAST</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LOWER_UP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mtu</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1500</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> qdisc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> pfifo_fast</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> state</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UP</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> group</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> qlen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1000</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    link</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ether</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0c</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">29</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">b0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">49</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> brd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ff</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    inet</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192.168.6.128</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">24</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> brd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192.168.6.255</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> scope</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> global</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> noprefixroute</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dynamic</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ens33</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       valid_lft</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1542sec</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> preferred_lft</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1542sec</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    inet6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> fe80</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">c9ef</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8ba9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4a00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">f031</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">64</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> scope</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> link</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> noprefixroute</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       valid_lft</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> forever</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> preferred_lft</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> forever</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 三、修改配置网卡文件       </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">vi</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">etc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sysconfig</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">network</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scripts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ifcfg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ens33</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 或者可以这样       </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> cd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">etc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sysconfig</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">network</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scripts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ls</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 查看当前目录有哪些文件，找到 ifcfg-网卡名 例如这里ifcfg-ens33</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> vi</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ifcfg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ens33</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 四、打开后网卡的默认配置       </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TYPE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Ethernet</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PROXY_METHOD</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">none</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BROWSER_ONLY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">no</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BOOTPROTO</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dhcp</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DEFROUTE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">yes</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IPV4_FAILURE_FATAL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">no</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IPV6INIT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">yes</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IPV6_AUTOCONF</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">yes</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IPV6_DEFROUTE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">yes</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IPV6_FAILURE_FATAL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">no</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IPV6_ADDR_GEN_MODE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">stable</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">privacy</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ens33</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UUID</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">680f0e10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9dc6</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4f00</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">b942</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">888ca244d4bf</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DEVICE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ens33</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ONBOOT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">no</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 五、找ONBOOT选项，把no改为yes     </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ONBOOT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">yes</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 六、重启网卡或者重启系统      </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">service</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> network</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> restart</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 或</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> systemctl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> restart</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> netwrok</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 七、测试      </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ping</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> www</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">baidu</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">com</span></span></code></pre></div></li></ol><h2 id="ssh连接linux服务器" tabindex="-1">SSH连接Linux服务器 <a class="header-anchor" href="#ssh连接linux服务器" aria-label="Permalink to &quot;SSH连接Linux服务器&quot;">​</a></h2><p>一般我们连接服务器都是用ssh连接服务器，再个别一点在服务器商提供一些方法去连接。这里我们用xshell软件进行远程连接</p><p><strong>xshell官网</strong></p><p><a href="https://www.netsarang.com/en/xshell/" target="_blank" rel="noreferrer">https://www.netsarang.com/en/xshell/</a></p><p><strong>xshell免费版</strong></p><p><a href="https://www.netsarang.com/zh/free-for-home-school/" target="_blank" rel="noreferrer">https://www.netsarang.com/zh/free-for-home-school/</a></p><blockquote><h4 id="安装openssh-server-注意这里用root用户-普通用户在指令前面加上sudo" tabindex="-1">安装openssh-server (注意这里用root用户，普通用户在指令前面加上sudo) <a class="header-anchor" href="#安装openssh-server-注意这里用root用户-普通用户在指令前面加上sudo" aria-label="Permalink to &quot;安装openssh-server (注意这里用root用户，普通用户在指令前面加上sudo)&quot;">​</a></h4></blockquote><p>1.安装指令</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>yum install -y openssl openssh-server</span></span></code></pre></div><p>2.执行下面的指令修改配置文件,去掉监听地址前的以及允许远程用户使用root登陆</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/ssh/sshd_config</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#找到下面两行代码，把代码前面的井号去掉</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ssh的端口</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#Port 22</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 允许root用户登录</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#PermitRootLogin yes</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 重置root用户的密码</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> passwd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span></span></code></pre></div><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/linux/ssh_1.png" alt="img"></p><p>3.修改好后按键盘按键 ESC 然后输入冒号 再输入 wq 保存退出</p><p>4.ssh以及防火墙一些常用指令</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>查看防火墙</span></span>
<span class="line"><span>firewall-cmd --state</span></span>
<span class="line"><span></span></span>
<span class="line"><span>临时关闭防火墙</span></span>
<span class="line"><span>systemctl stop firewalld</span></span>
<span class="line"><span></span></span>
<span class="line"><span>临时打开防火墙</span></span>
<span class="line"><span>systemctl start firewalld</span></span>
<span class="line"><span></span></span>
<span class="line"><span>开机禁止启动防火墙</span></span>
<span class="line"><span>systemctl disable firewalld</span></span>
<span class="line"><span></span></span>
<span class="line"><span>开机启动防火墙</span></span>
<span class="line"><span>systemctl enable firewalld</span></span>
<span class="line"><span></span></span>
<span class="line"><span>查看状态：</span></span>
<span class="line"><span>systemctl status sshd.service</span></span>
<span class="line"><span></span></span>
<span class="line"><span>启动服务：</span></span>
<span class="line"><span>systemctl start sshd.service</span></span>
<span class="line"><span></span></span>
<span class="line"><span>重启服务：</span></span>
<span class="line"><span>systemctl restart sshd.service</span></span>
<span class="line"><span></span></span>
<span class="line"><span>开机自启：</span></span>
<span class="line"><span>systemctl enable sshd.service</span></span>
<span class="line"><span></span></span>
<span class="line"><span>开机禁用</span></span>
<span class="line"><span>systemctl disable sshd.service</span></span>
<span class="line"><span></span></span>
<span class="line"><span>关闭ssh服务</span></span>
<span class="line"><span>systemctl stop sshd.service</span></span></code></pre></div><blockquote><h4 id="xshell安装-付费版安装" tabindex="-1">xshell安装(付费版安装) <a class="header-anchor" href="#xshell安装-付费版安装" aria-label="Permalink to &quot;xshell安装(付费版安装)&quot;">​</a></h4></blockquote><p>1、我们打开上面的链接,按图操作</p><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/linux/xshell_1.png" alt="img"></p><p>2、打开后选择30 Day Evaluation这块，填上你的名字和你的邮箱，然后点击STARTTRIAL，你会收到一封邮件里会有下载链接，点击下载</p><p>3、点击软件包安装，首先打开后再下一步</p><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/linux/xshell_2.png" alt="img"></p><p>4、再到许可协议，选择我接受许可证协议中的条款</p><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/linux/xshell_3.png" alt="img"></p><p>5、选择安装路径，根据自己的情况去选择，再下一步</p><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/linux/xshell_4.png" alt="img"></p><p>6、这一步就默认即可</p><p>7、最一步点击安装，然后等待安装</p><p>8，打开xshell，点击文件再选择新建</p><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/linux/xshell_5.png" alt="img"></p><p>9、新建会话这里按图片去操作即可，这里我们用阿里云的服务器来测试</p><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/linux/xshell_6.png" alt="img"></p><p>10、输入用户名，点击确定</p><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/linux/xshell_7.png" alt="img"></p><p>11、输入密码，然后点击确定</p><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/linux/xshell_8.png" alt="img"></p><p>12、这样连接成功！</p><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/linux/xshell_9.png" alt="img"></p><h2 id="lamp-lnmp的环境编译" tabindex="-1">LAMP/LNMP的环境编译 <a class="header-anchor" href="#lamp-lnmp的环境编译" aria-label="Permalink to &quot;LAMP/LNMP的环境编译&quot;">​</a></h2><blockquote><h4 id="什么是lamp-什么是lnmp" tabindex="-1">什么是LAMP？什么是LNMP？ <a class="header-anchor" href="#什么是lamp-什么是lnmp" aria-label="Permalink to &quot;什么是LAMP？什么是LNMP？&quot;">​</a></h4></blockquote><p>LAMP是Linux+Apache+MySQL+PHP ,LNMP就是Linux+Nginx+MySQL+PHP</p><blockquote><h4 id="什么是nginx" tabindex="-1">什么是Nginx? <a class="header-anchor" href="#什么是nginx" aria-label="Permalink to &quot;什么是Nginx?&quot;">​</a></h4></blockquote><p>Nginx (&quot;engine x&quot;) 是一个高性能的 HTTP 和 反向代理 服务器，也是一个 IMAP/POP3/SMTP 代理服务器。 Nginx 是由 Igor Sysoev 为俄罗斯访问量第二的 Rambler.ru 站点开发的。Igor 将源代码以类BSD许可证的形式发布。Nginx 已经因为它的稳定性、丰富的功能集、示例配置文件和低系统资源的消耗而闻名了。 官方网站：<a href="http://nginx.org/" target="_blank" rel="noreferrer">http://nginx.org/</a></p><blockquote><h4 id="安装篇" tabindex="-1">安装篇 <a class="header-anchor" href="#安装篇" aria-label="Permalink to &quot;安装篇&quot;">​</a></h4></blockquote><p>现在我们一般都使用集成环境，很少使用自定义环境，因为能大大节省了搭建php mysql环境的时间，我们安装好就可以直接使用。</p><p>这里我们主要搭建宝塔的集成环境，当然，还有其他的集成环境 例如phpstudy linux版等等</p><blockquote><h4 id="其他集成环境" tabindex="-1">其他集成环境 <a class="header-anchor" href="#其他集成环境" aria-label="Permalink to &quot;其他集成环境&quot;">​</a></h4></blockquote><p><a href="https://lnmp.org/" target="_blank" rel="noreferrer">https://lnmp.org/</a></p><p><a href="https://www.wdlinux.cn/wdcp/" target="_blank" rel="noreferrer">https://www.wdlinux.cn/wdcp/</a></p><p><a href="https://www.xp.cn/linux.html#install-show" target="_blank" rel="noreferrer">https://www.xp.cn/linux.html#install-show</a></p><blockquote><h4 id="安装宝塔" tabindex="-1">安装宝塔 <a class="header-anchor" href="#安装宝塔" aria-label="Permalink to &quot;安装宝塔&quot;">​</a></h4></blockquote><p>1、我们去Linux系统(Ubuntu)里面，在桌面点击鼠标右键选择在终端打开(因为搭建环境用的系统是Ubuntu有桌面)</p><p>2、在终端输入su，输入密码，如果忘记密码了，在终端输入sudo passwd root重设置密码</p><p>3、去浏览器打开宝塔官网<a href="https://www.bt.cn/" target="_blank" rel="noreferrer">https://www.bt.cn/</a> 选Linux版</p><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/linux/bt_1.png" alt="img"></p><p>4、我们根据我们的系统选择，复制命令去终端里回车，等待安装完成</p><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/linux/bt_2.png" alt="img"></p><p>5、安装完成后，终端会弹出宝塔工具箱界面和内网和外网IP，按需求选择命令</p><p>6、如果忘记内网和外网的IP，可以在终端输入bt default</p><p>7、如果需要宝塔工具箱，在终端里输入bt</p><p>7、首次进入宝塔面板时会有一个弹窗，让我们选择LAMP还是LNMP的环境</p><p>8、可以在面板里软件商店按需求安装要的插件</p><p>9、新建站点，按图下的操作，每个项目的端口要不一样的端口，不然访问不了</p><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/linux/bt_3.png" alt="img"></p><p>10、配置好了就在浏览器输入内网ip+端口就可以访问</p><h2 id="linux文件处理命令" tabindex="-1">Linux文件处理命令 <a class="header-anchor" href="#linux文件处理命令" aria-label="Permalink to &quot;Linux文件处理命令&quot;">​</a></h2><p>在Linux系统里我们一般都是用命令行去操作。不会像Windows可视图操作</p><blockquote><h4 id="文件操作" tabindex="-1">文件操作 <a class="header-anchor" href="#文件操作" aria-label="Permalink to &quot;文件操作&quot;">​</a></h4></blockquote><h2 id="_1、ls-显示文件" tabindex="-1">1、ls 显示文件 <a class="header-anchor" href="#_1、ls-显示文件" aria-label="Permalink to &quot;1、ls 显示文件&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>    -a    显示所有文件(包括隐藏的文件)</span></span>
<span class="line"><span>    -l    显示文件的详细信息</span></span>
<span class="line"><span>    -h    易读模式(带单位)</span></span>
<span class="line"><span>    -u    显示文件的最后访问时间</span></span>
<span class="line"><span>    -t    按时间排序显示</span></span>
<span class="line"><span></span></span>
<span class="line"><span>显示的结果中,第一个字符一般用来区分文件和目录：</span></span>
<span class="line"><span>d：表示是一个目录，事实上在ext2fs中，目录是一个特殊的文件。</span></span>
<span class="line"><span>－：表示这是一个普通的文件。</span></span>
<span class="line"><span>l: 表示这是一个符号链接文件，实际上它指向另一个文件。</span></span>
<span class="line"><span>例1：显示当前工作目录的文件</span></span>
<span class="line"><span>    ls -l</span></span>
<span class="line"><span>例2：显示当前www目录下所有文件</span></span>
<span class="line"><span>    ls -l /var/www</span></span></code></pre></div><h2 id="_2、cd-切换目录" tabindex="-1">2、cd 切换目录 <a class="header-anchor" href="#_2、cd-切换目录" aria-label="Permalink to &quot;2、cd 切换目录&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>    cd  [绝对路径或相对路径]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    cd -    返回前一个工作目录</span></span>
<span class="line"><span>    cd .    进入当前工作目录</span></span>
<span class="line"><span>    cd ..    返回上一级工作目录</span></span>
<span class="line"><span>    cd ~    返回当前用户家目录</span></span></code></pre></div><h2 id="_3、pwd-查看当前工作目录" tabindex="-1">3、pwd 查看当前工作目录 <a class="header-anchor" href="#_3、pwd-查看当前工作目录" aria-label="Permalink to &quot;3、pwd 查看当前工作目录&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>    pwd</span></span></code></pre></div><h2 id="_4、mkdir-创建目录" tabindex="-1">4、mkdir 创建目录 <a class="header-anchor" href="#_4、mkdir-创建目录" aria-label="Permalink to &quot;4、mkdir 创建目录&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>    mkdir  [-mp]  目录名称</span></span>
<span class="line"><span>    -m        设置目录权限</span></span>
<span class="line"><span>    -p        递归创建目录</span></span></code></pre></div><h2 id="_5、rmdir-删除目录" tabindex="-1">5、rmdir 删除目录 <a class="header-anchor" href="#_5、rmdir-删除目录" aria-label="Permalink to &quot;5、rmdir 删除目录&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>    rmdir 目录名（只能删空的文件夹）</span></span></code></pre></div><h2 id="_6、cp-复制文件" tabindex="-1">6、cp 复制文件 <a class="header-anchor" href="#_6、cp-复制文件" aria-label="Permalink to &quot;6、cp 复制文件&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>    cp [-adfilprsu] 来源文件 目标文件</span></span>
<span class="line"><span>    -r 递归复制</span></span>
<span class="line"><span>    -p 连同文件属性一起复制，包括权限、所有者和时间等</span></span>
<span class="line"><span>    -f 强行复制</span></span></code></pre></div><h2 id="_7-、mv-移动或重命名" tabindex="-1">7 、mv 移动或重命名 <a class="header-anchor" href="#_7-、mv-移动或重命名" aria-label="Permalink to &quot;7 、mv 移动或重命名&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>    mv file1(文件) file2(文件)  将源文件名 file1 改为目标文件名 file2</span></span>
<span class="line"><span>    mv source_file(文件) dest_directory(目录)  将文件 source_file 移动到目标目录 dest_directory 中</span></span>
<span class="line"><span>    -b: 当目标文件或目录存在时，在执行覆盖前，会为其创建一个备份。</span></span>
<span class="line"><span>    -i: 如果指定移动的源目录或文件与目标的目录或文件同名，则会先询问是否覆盖旧文件，输入 y 表示直接覆盖，输入 n 表示取消该操作。</span></span>
<span class="line"><span>    -f: 如果指定移动的源目录或文件与目标的目录或文件同名，不会询问，直接覆盖旧文件。</span></span>
<span class="line"><span>    -n: 不要覆盖任何已存在的文件或目录。</span></span>
<span class="line"><span>    -u：当源文件比目标文件新或者目标文件不存在时，才执行移动操作。</span></span></code></pre></div><h2 id="_8、rm-删除文件" tabindex="-1">8、rm 删除文件 <a class="header-anchor" href="#_8、rm-删除文件" aria-label="Permalink to &quot;8、rm 删除文件&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>    -r   递归删除</span></span>
<span class="line"><span>    -f    强制删除</span></span></code></pre></div><h2 id="_9、touch-创建文件或者修改文件的属性" tabindex="-1">9、touch 创建文件或者修改文件的属性 <a class="header-anchor" href="#_9、touch-创建文件或者修改文件的属性" aria-label="Permalink to &quot;9、touch 创建文件或者修改文件的属性&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>    例：#touch –t 201008081230 hello.txt  修改文件时间</span></span>
<span class="line"><span>    -a 改变档案的读取时间记录。</span></span>
<span class="line"><span>    -m 改变档案的修改时间记录。</span></span>
<span class="line"><span>    -c 假如目的档案不存在，不会建立新的档案。与 --no-create 的效果一样。</span></span>
<span class="line"><span>    -f 不使用，是为了与其他 unix 系统的相容性而保留。</span></span>
<span class="line"><span>    -r 使用参考档的时间记录，与 --file 的效果一样。</span></span>
<span class="line"><span>    -d 设定时间与日期，可以使用各种不同的格式。</span></span>
<span class="line"><span>    -t 设定档案的时间记录，格式与 date 指令相同。</span></span>
<span class="line"><span>    --no-create 不会建立新档案。</span></span>
<span class="line"><span>    --help 列出指令格式。</span></span>
<span class="line"><span>    --version 列出版本讯息。</span></span></code></pre></div><h2 id="_10、cat-查看文件" tabindex="-1">10、cat 查看文件 <a class="header-anchor" href="#_10、cat-查看文件" aria-label="Permalink to &quot;10、cat 查看文件&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>    cat a.html                          查看文件内容</span></span>
<span class="line"><span>    cat a.html b.html &gt; c.html          合并多个文件的内容写入到新建的文件</span></span>
<span class="line"><span>    cat a.html b.html &gt;&gt; c.html         合并多个文件的内容追加到指定文件</span></span>
<span class="line"><span>    cat -n c.html                       查看文件内容（有行号）</span></span>
<span class="line"><span>    cat /dev/null &gt; a.html              清空一个文件的内容</span></span>
<span class="line"><span>    cat -b a.html                       查看文件内容（有行号，不包括空白行）</span></span>
<span class="line"><span>    cat -s a.html                       查看文件内容（有行号，合并连续的空白行）</span></span>
<span class="line"><span>    cat -E a.html                       查看文件内容（每行结尾处添加$符号）</span></span>
<span class="line"><span>    cat a.html b.html                   同时查看多个文件的内容</span></span></code></pre></div><h2 id="linux权限管理命令" tabindex="-1">Linux权限管理命令 <a class="header-anchor" href="#linux权限管理命令" aria-label="Permalink to &quot;Linux权限管理命令&quot;">​</a></h2><blockquote><h4 id="什么是权限管理" tabindex="-1">什么是权限管理 <a class="header-anchor" href="#什么是权限管理" aria-label="Permalink to &quot;什么是权限管理&quot;">​</a></h4></blockquote><p>就像有某些目录或者文件没有访问权限时，这时候我们用到linux的命令去改变它们的访问权限，还有用户与用户组管理</p><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/linux/root.png" alt="img"></p><h4 id="一、chmod-改变文件或目录的权限" tabindex="-1">一、chmod 改变文件或目录的权限 <a class="header-anchor" href="#一、chmod-改变文件或目录的权限" aria-label="Permalink to &quot;一、chmod 改变文件或目录的权限&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>    -u 表示该文件的拥有者，g 表示与该文件的拥有者属于同一个群体(group)者，o 表示其他以外的人，a 表示这三者皆是。</span></span>
<span class="line"><span>    + 表示增加权限、- 表示取消权限、= 表示唯一设定权限。</span></span>
<span class="line"><span>    -r 表示可读取，w 表示可写入，x 表示可执行，X 表示只有当该文件是个子目录或者该文件已经被设定过为可执行。</span></span>
<span class="line"><span>其他参数说明：</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    -c : 若该文件权限确实已经更改，才显示其更改动作</span></span>
<span class="line"><span>    -f : 若该文件权限无法被更改也不要显示错误讯息</span></span>
<span class="line"><span>    -v : 显示权限变更的详细资料</span></span>
<span class="line"><span>    -R : 对目前目录下的所有文件与子目录进行相同的权限变更(即以递归的方式逐个变更)</span></span>
<span class="line"><span>    --help : 显示辅助说明</span></span>
<span class="line"><span>    --version : 显示版本</span></span></code></pre></div><h6 id="_1、权限数字表示方式" tabindex="-1">1、权限数字表示方式 <a class="header-anchor" href="#_1、权限数字表示方式" aria-label="Permalink to &quot;1、权限数字表示方式&quot;">​</a></h6><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>    r:4        w:2    x:1</span></span>
<span class="line"><span>    如：-rwxr-xr--     =    [4+2+1][4+0+1][4+0+0]=754 </span></span>
<span class="line"><span>    例1：开放文件所有权限</span></span>
<span class="line"><span>    # chmod      777  .bashrc</span></span></code></pre></div><h5 id="_2、符号方式改变权限" tabindex="-1">2、符号方式改变权限 <a class="header-anchor" href="#_2、符号方式改变权限" aria-label="Permalink to &quot;2、符号方式改变权限&quot;">​</a></h5><table><thead><tr><th style="text-align:center;">who</th><th style="text-align:center;">用户类型</th><th style="text-align:center;"><strong>说明</strong></th></tr></thead><tbody><tr><td style="text-align:center;">u</td><td style="text-align:center;">user</td><td style="text-align:center;">文件所有者</td></tr><tr><td style="text-align:center;">g</td><td style="text-align:center;">group</td><td style="text-align:center;">文件所有者所在组</td></tr><tr><td style="text-align:center;">o</td><td style="text-align:center;">others</td><td style="text-align:center;">所有其他用户</td></tr><tr><td style="text-align:center;">a</td><td style="text-align:center;">all</td><td style="text-align:center;">所用用户, 相当于 <em>ugo</em></td></tr></tbody></table><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>    例1：将文件权限设置为：拥有者具有所有权限，群组、其它人具有可读、可执行权限</span></span>
<span class="line"><span>    # chmod u=rwx,go=rx .bashrc </span></span>
<span class="line"><span></span></span>
<span class="line"><span>    例2：去掉全部人的可执行权限</span></span>
<span class="line"><span>    # chmod a-x .bashrc</span></span></code></pre></div><h4 id="二、chgrp-改变群组" tabindex="-1">二、chgrp 改变群组 <a class="header-anchor" href="#二、chgrp-改变群组" aria-label="Permalink to &quot;二、chgrp 改变群组&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>    chgrp [-R]  用户名     文件名</span></span>
<span class="line"><span>    -R:进行递归的修改，即连同子目录下的所有文件都会修改</span></span>
<span class="line"><span>    例：</span></span>
<span class="line"><span>    #chgrp  –R   www    /var/www </span></span>
<span class="line"><span></span></span>
<span class="line"><span>    3.chown 改变文件拥有者</span></span>
<span class="line"><span>    chown [-R] 用户名 文件或目录</span></span>
<span class="line"><span>    chown [-R] 用户名:组名 文件或目录</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    例：</span></span>
<span class="line"><span>    #chown    -R   www:www    /var/www</span></span></code></pre></div><h4 id="三、sudo-给运行的命令以root特权" tabindex="-1">三、sudo 给运行的命令以root特权 <a class="header-anchor" href="#三、sudo-给运行的命令以root特权" aria-label="Permalink to &quot;三、sudo 给运行的命令以root特权&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sudo apt-get update  更新源</span></span>
<span class="line"><span></span></span>
<span class="line"><span>sudo apt-get remove package 删除安装包</span></span>
<span class="line"><span></span></span>
<span class="line"><span>sudo apt-get install package 安装包</span></span></code></pre></div><h2 id="linux文件搜索命令" tabindex="-1">Linux文件搜索命令 <a class="header-anchor" href="#linux文件搜索命令" aria-label="Permalink to &quot;Linux文件搜索命令&quot;">​</a></h2><h2 id="_1、find" tabindex="-1">1、find <a class="header-anchor" href="#_1、find" aria-label="Permalink to &quot;1、find&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>    find是最常见和最强大的查找命令，你可以用它找到任何你想找的文件。</span></span>
<span class="line"><span>    find &lt;指定目录&gt; &lt;指定条件&gt; &lt;指定动作&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>　　    </span></span>
<span class="line"><span>　　    </span></span>
<span class="line"><span>　　    例：</span></span>
<span class="line"><span>　　        find /home -name &#39;my*&#39;  搜索当前目录（含子目录，以下同）中，所有文件名以my开头的文件。</span></span>
<span class="line"><span>　　        find /home -name &#39;my*&#39; -ls  搜索当前目录中，所有文件名以my开头的文件，并显示它们的详细信息。</span></span>
<span class="line"><span>　　        find /home -type f -mmin -10    搜索当前目录中，所有过去10分钟中更新过的普通文件。如果不加-type f参数，则搜索普通文件+特殊文件+目录</span></span></code></pre></div><h2 id="_2、which" tabindex="-1">2、which <a class="header-anchor" href="#_2、which" aria-label="Permalink to &quot;2、which&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>    在PATH变量指定的路径中，搜索某个系统命令的位置，并且返回第一个搜索结果</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    例：</span></span>
<span class="line"><span>        which grep</span></span>
<span class="line"><span>        which  ls</span></span></code></pre></div><h2 id="_3、whereis" tabindex="-1">3、whereis <a class="header-anchor" href="#_3、whereis" aria-label="Permalink to &quot;3、whereis&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>查看文件的位置</span></span>
<span class="line"><span></span></span>
<span class="line"><span>例：</span></span>
<span class="line"><span>    whereis  ls</span></span></code></pre></div><h2 id="linux压缩解压编译命令" tabindex="-1">Linux压缩解压编译命令 <a class="header-anchor" href="#linux压缩解压编译命令" aria-label="Permalink to &quot;Linux压缩解压编译命令&quot;">​</a></h2><p>Linux的压缩解压都是通过命令行执行，不像Windows有各种各样的压缩解压软件，所以我们要学习该命令</p><h2 id="_1、zip-压缩" tabindex="-1">1、zip 压缩 <a class="header-anchor" href="#_1、zip-压缩" aria-label="Permalink to &quot;1、zip 压缩&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>    zip 压缩文件名 要压缩的文件</span></span>
<span class="line"><span>    压缩单个文件</span></span>
<span class="line"><span>    zip web.zip a.html</span></span>
<span class="line"><span>    zip web.zip ./a.html</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    压缩多个文件</span></span>
<span class="line"><span>    zip web.zip a.html b.html</span></span>
<span class="line"><span>    zip web.zip ./a.html ./b.html</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    压缩目录</span></span>
<span class="line"><span>    -r是启动递归，将目录下的所有文件全部压缩到web.zip里面</span></span>
<span class="line"><span>    zip -r web.zip casepro</span></span>
<span class="line"><span>    zip -r web.zip ./casepro</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    从压缩文件里面删除文件</span></span>
<span class="line"><span>    zip -d web.zip a.html</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    移动文件到压缩文件里面。注意：会删除源文件的</span></span>
<span class="line"><span>    zip -m web.zip c.html</span></span></code></pre></div><h2 id="_2、unzip-解压缩" tabindex="-1">2、unzip 解压缩 <a class="header-anchor" href="#_2、unzip-解压缩" aria-label="Permalink to &quot;2、unzip 解压缩&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>    显示压缩文件内所包含的文件</span></span>
<span class="line"><span>    unzip -l web.zip</span></span>
<span class="line"><span>    unzip -l ./web.zip</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    不必先询问用户，unzip执行后覆盖原有文件</span></span>
<span class="line"><span>    unzip -o web.zip</span></span>
<span class="line"><span>    unzip -o ./web.zip</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    指定文件解压缩后所要存储的目录</span></span>
<span class="line"><span>    unzip -d web web.zip</span></span>
<span class="line"><span>    unzip -d ./web ./web.zip</span></span></code></pre></div><h2 id="_3、tar-压缩-解压" tabindex="-1">3、tar 压缩/解压 <a class="header-anchor" href="#_3、tar-压缩-解压" aria-label="Permalink to &quot;3、tar 压缩/解压&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>    tar [参数] [压缩文件名] [要压缩的文件]</span></span>
<span class="line"><span>    -z 亦即是否需要用 gzip 压缩或解压？</span></span>
<span class="line"><span>    -c 建立压缩文件</span></span>
<span class="line"><span>    -v 显示处理过程</span></span>
<span class="line"><span>    -f 使用创建的压缩文件</span></span>
<span class="line"><span>    tar -zcvf web.tar.gz a.html b.html</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    tar [参数] [解压缩文件名]</span></span>
<span class="line"><span>    -z 亦即是否需要用 gzip 压缩或解压？</span></span>
<span class="line"><span>    -x 提取压缩文件内的文件</span></span>
<span class="line"><span>    -v 显示处理过程</span></span>
<span class="line"><span>    -f 使用创建的压缩文件</span></span>
<span class="line"><span>    tar -zxvf web.tar.gz</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    tar [参数] [tar文件名]</span></span>
<span class="line"><span>    -t 列出归档内容</span></span>
<span class="line"><span>    -v 详细地列出处理的文件</span></span>
<span class="line"><span>    -f 使用的压缩文件</span></span>
<span class="line"><span>    tar -tvf web.tar.gz</span></span></code></pre></div><h2 id="linux文本编辑器vim的使用" tabindex="-1">Linux文本编辑器Vim的使用 <a class="header-anchor" href="#linux文本编辑器vim的使用" aria-label="Permalink to &quot;Linux文本编辑器Vim的使用&quot;">​</a></h2><p>Vim是从 vi 发展出来的一个文本编辑器。代码补完、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。</p><p>vim 的官方网站 (<a href="http://www.vim.org/" target="_blank" rel="noreferrer">http://www.vim.org</a>)</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>vi/vim 共分为三种模式:</span></span>
<span class="line"><span>    命令模式（Command mode）</span></span>
<span class="line"><span>    输入模式（Insert mode）</span></span>
<span class="line"><span>    底线命令模式（Last line mode）</span></span></code></pre></div><h4 id="命令模式" tabindex="-1">命令模式： <a class="header-anchor" href="#命令模式" aria-label="Permalink to &quot;命令模式：&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>    刚启动 vi/vim，便进入了命令模式。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    此状态下敲击键盘动作会被Vim识别为命令，而非输入字符。比如我们此时按下i，并不会输入一个字符，i被当作了一个命令。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    以下是常用的几个命令：</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    i 切换到输入模式，以输入字符。</span></span>
<span class="line"><span>    x 删除当前光标所在处的字符。</span></span>
<span class="line"><span>    : 切换到底线命令模式，以在最底一行输入命令。</span></span>
<span class="line"><span>    若想要编辑文本：启动Vim，进入了命令模式，按下i，切换到输入模式。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    命令模式只有一些最基本的命令，因此仍要依靠底线命令模式输入更多命令。</span></span></code></pre></div><h4 id="输入模式" tabindex="-1">输入模式: <a class="header-anchor" href="#输入模式" aria-label="Permalink to &quot;输入模式:&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>    输入模式</span></span>
<span class="line"><span>    在命令模式下按下i就进入了输入模式。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    在输入模式中，可以使用以下按键：</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    字符按键以及Shift组合，输入字符</span></span>
<span class="line"><span>    ENTER，回车键，换行</span></span>
<span class="line"><span>    BACK SPACE，退格键，删除光标前一个字符</span></span>
<span class="line"><span>    DEL，删除键，删除光标后一个字符</span></span>
<span class="line"><span>    方向键，在文本中移动光标</span></span>
<span class="line"><span>    HOME/END，移动光标到行首/行尾</span></span>
<span class="line"><span>    Page Up/Page Down，上/下翻页</span></span>
<span class="line"><span>    Insert，切换光标为输入/替换模式，光标将变成竖线/下划线</span></span>
<span class="line"><span>    ESC，退出输入模式，切换到命令模式</span></span></code></pre></div><h4 id="底线命令模式" tabindex="-1">底线命令模式: <a class="header-anchor" href="#底线命令模式" aria-label="Permalink to &quot;底线命令模式:&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>    在命令模式下按下:（英文冒号）就进入了底线命令模式。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        底线命令模式可以输入单个或多个字符的命令，可用的命令非常多。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        在底线命令模式中，基本的命令有（已经省略了冒号）：</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        q 退出程序</span></span>
<span class="line"><span>        w 保存文件</span></span>
<span class="line"><span>        按ESC键可随时退出底线命令模式。</span></span>
<span class="line"><span>    vim test.txt    vi 来建立一个名为 test.txt 的文件</span></span>
<span class="line"><span>    请注意，记得 vi 后面一定要加文件名，不管该文件存在与否</span></span></code></pre></div><p><img src="http://web.wdwangke.com/mdphoto/backend/backend/vim.png" alt="img"></p>`,195),e=[l];function t(h,k,d,r,c,o){return i(),a("div",null,e)}const F=s(p,[["render",t]]);export{C as __pageData,F as default};
